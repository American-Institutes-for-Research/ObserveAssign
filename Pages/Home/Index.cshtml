@page
@model ObserveAssign.Pages.Home.IndexModel
@{
    ViewData["Title"] = "Assignments";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Assignments</h1>

@foreach(var proj in Model.UserProjectModel)
{
    <h2 style="padding-top:20px;">@proj.Project.Name</h2>
    @(
    Html.Kendo().Grid(Model.UserVideoModel.Where(p => p.Video.ProjectId == proj.ProjectId))
        .Name(proj.ProjectId + "_grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.Video.Name).ClientTemplate("# if(!data.IsComplete && !data.IsLocked && !data.IsArchived){ # <a href='/Videos/Watch?id=#: Id #'>#: Video.Name # </a> #}else{# #: Video.Name # #}#");
            columns.Bound(p => p.CreatedDate).Title("Date Assigned").Format("{0:MM/dd/yyyy hh:mm:ss tt}");
            columns.Bound(p => p.IsComplete).Title("Status").ClientTemplate("# if(data.IsComplete){# <div><img src='/img/checkmark.png' /> Complete</div> #}else{# <div><img src='/img/alert.png' /> Incomplete</div> # } #");
            columns.Bound(p => p.Id).ClientTemplate("<a href='/UserVideo/ExportNotes?id=#: Id #' class='btn btn-blue'>Export Notes</a> # if (!data.IsComplete && data.IsLocked){ # <a href='/UserVideo/WatchAgain?id=#: Id #' class='btn btn-green'>Ask to Watch Again</a>#}#").Title("Options");
        })
        .Pageable()
        .Sortable(sort => sort.AllowUnsort(true).InitialDirection("desc"))
        .Scrollable(scroll => scroll.Height("fit-content"))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .ServerOperation(false)
            )
    )
}